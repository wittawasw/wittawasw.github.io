<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://wittawasw.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://wittawasw.com/" rel="alternate" type="text/html" /><updated>2024-06-03T00:30:18+07:00</updated><id>https://wittawasw.com/feed.xml</id><title type="html">wittawasw</title><subtitle></subtitle><author><name>wittawasw</name><email>your-email@domain.com</email></author><entry><title type="html">เรื่องที่รู้ไว้ก็ดีก่อนเริ่มใช้งาน Active Record และ Active Record Migration</title><link href="https://wittawasw.com/2024/06/02/activerecord-and-activerecord-migration.html" rel="alternate" type="text/html" title="เรื่องที่รู้ไว้ก็ดีก่อนเริ่มใช้งาน Active Record และ Active Record Migration" /><published>2024-06-02T14:28:00+07:00</published><updated>2024-06-02T14:28:00+07:00</updated><id>https://wittawasw.com/2024/06/02/activerecord-and-activerecord-migration</id><content type="html" xml:base="https://wittawasw.com/2024/06/02/activerecord-and-activerecord-migration.html"><![CDATA[<p>บทความนี้ได้แรงผลักดันมาจากการที่โดนถามมาเรื่องการทำ Database Migration ของ Rails
ซึ่งส่วนตัวคิดว่าบทความในอินเตอร์เนตเท่าที่หาดู ไม่มีอันไหนช่วยให้เข้าใจได้ดีกว่า
<a href="https://guides.rubyonrails.org/active_record_migrations.html">Official Doc</a> ของ Rails เลย
แต่เราก็เชื่อว่าคนถามน่าจะลองอ่านแล้วล่ะ แต่แค่อาจจะยังไม่ตกผลึกออกมาเป็นแนวปฏิบัติไม่ได้
ก็เลยคิดว่าจะลองพยายามเขียนอะไรซักอย่างขึ้นมาอุดช่องว่าง
สำหรับคนที่พอเข้าใจการทำงานของฐานข้อมูลอยู่แล้ว แต่แค่ไม่ได้ทำงานด้วย Ruby on Rails มาก่อน
ให้สามารถเห็นภาพการทำงานที่ชัดขึ้น</p>

<h2 id="active-record">Active Record</h2>

<p>Model ใน MVC ของ Ruby on Rails นั้นใช้ library ORM เฉพาะของตัวเองที่ชื่อว่า <code class="language-plaintext highlighter-rouge">Active Record</code>
โดยชื่อของ library ก็ได้รับอิทธิพลโดยตรงมาจากแนวคิด
<a href="https://en.wikipedia.org/wiki/Active_record_pattern"><code class="language-plaintext highlighter-rouge">Active record pattern</code></a>
ซึ่งแนวคิดหลักของ pattern นี้ คือ</p>

<ul>
  <li>
    <p>การเข้าถึง table แต่ล่ะ table จะถูก encapsulate อยู่ภายใน class โดยที่แต่ล่ะ instance ของ class ก็คือตัวแทนของ row หรือ record ของข้อมูลใน table และมีวิธีเข้าถึงข้อมูลแต่ล่ะ column ตามชื่อของ column นั้นโดยตรง</p>

    <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">user</span><span class="p">.</span><span class="nf">class</span><span class="p">.</span><span class="nf">name</span>
<span class="c1"># =&gt; "User"</span>
<span class="n">user</span><span class="p">.</span><span class="nf">firstname</span>
<span class="c1"># =&gt; "John"</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>เมื่อ instance ของ class ได้รับการ initiate ขึ้นมาใหม่และถูก save …จะเท่ากับการ insert
record ใหม่</p>

    <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">firstname: </span><span class="s2">"John"</span><span class="p">)</span>
<span class="n">user</span><span class="p">.</span><span class="nf">save</span>
<span class="c1"># =&gt; INSERT INTO "users" (firstname) VALUES ("John", "2024-06-02 12:34:56", "2024-06-02 12:34:56") RETURNING "id"</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>เมื่อ instance ของ class ได้รับการ load จากข้อมูลที่อยู่เดิมและถูก save …จะเท่ากับการ
update record ใหม่</p>

    <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="ss">firstname: </span><span class="s2">"John"</span><span class="p">).</span><span class="nf">first</span>
<span class="n">user</span><span class="p">.</span><span class="nf">firstname</span> <span class="o">=</span> <span class="s2">"Jack"</span>
<span class="n">user</span><span class="p">.</span><span class="nf">save</span>
<span class="c1"># =&gt; UPDATE "users" SET "firstname" = ?, "updated_at" = ? WHERE "users"."id" = ?  [["firstname", "Jack"], ["updated_at", "2024-06-02 11:34:54.562867"], ["id", 1]]</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>ชื่อของ table กับชื่อของ class จะตั้งตามหลัก
<a href="https://en.wikipedia.org/wiki/Convention_over_configuration">Convention over configuration</a>
ซึ่งสรุปสั้นๆเร็วๆตรงนี้ได้ตามตัวอย่างนี้</p>

    <ul>
      <li>ชื่อ class = ชื่อ entity ของสิ่งที่เราต้องการใช้ในรูปเอกพจน์</li>
      <li>ชื่อ table = ชื่อ entity ของสิ่งที่เราต้องการใช้ในรูปพหูพจน์</li>
    </ul>

    <p><br /></p>

    <blockquote>
      <p>Ex: entity ของ user จะใช้ชื่อ class ว่า User ภายในไฟล์ชื่อ user.rb และอยู่ใน table ที่ชื่อ users</p>
    </blockquote>
  </li>
</ul>

<h2 id="active-record-migration">Active Record Migration</h2>

<p>เป็นเครื่องมือที่ทำมาเพื่อ support การทำงานของ Active Record
เพื่อให้นักพัฒนาสามารถทำงานไปพร้อมๆกันได้ โดยที่สามารถตรวจสอบการเปลี่ยนแปลงของ
Database Schema ได้ตลอด</p>

<blockquote>
  <p>คำว่า Database Schema ในที่นี้หมายถึง spec ของฐานข้อมูลนั้นๆ เช่น ชื่อ table รวมถึงชื่อ  column ภายใน, Primary Key, Foreign Key, Index ต่างๆ รวมถึง trigger หรือ store procedure ด้วย</p>
</blockquote>

<h3 id="อธิบายตามโครงสร้างไฟล์">อธิบายตามโครงสร้างไฟล์</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- config/
  - database.yml
    <span class="c"># ใช้ประกาศค่าต่างๆที่ใช้ในการเชื่อมต่อกับฐานข้อมูล เช่น host, port หรือ</span>
    <span class="c"># connection string</span>
- db/
  - migrate
    <span class="c"># directory ที่ใช้เก็บไฟล์ migration</span>
    <span class="c"># ใช้งานผ่านคำสั่ง rails db:migrate, rails db:rollback</span>
    - ....
  - schema.rb
    <span class="c"># ไฟล์ที่เก็บ schema ปัจจุบันของแอปพลิเคชัน</span>
    <span class="c"># ใช้งานผ่านคำสั่ง rails db:schema:load, rails db:schema:dump</span>
  - seeds.rb
    <span class="c"># ไฟล์ที่ใช้เก็บคำสั่งสำหรับสร้างข้อมูลเบื้องต้นที่จำเป็นในแอปพลิเคชัน</span>
    <span class="c"># ใช้งานผ่านคำสั่ง rails db:seed</span>
</code></pre></div></div>

<h2 id="การใช้งานในการทำงานจริงๆเป็นยังไง-">การใช้งานในการทำงานจริงๆเป็นยังไง ?</h2>

<p>จากที่เกริ่นมาทั้งหมดข้างบน คิดว่าหลายคนสามารถอ่านจนเข้าใจได้ไม่มีปัญหา แต่ถ้าจะมีปัญหาก็คือ
แนวทางปฏิบัติตอนที่ทำงานจริง ว่าเป็นยังไงกันแน่ ทำไมลองทำเองดูแล้วมันก็ยังงงๆ
ไม่แน่ใจว่าจะใช่แบบที่ทำรึเปล่า ซึ่งจากประสบการณ์แล้ว ก็ไม่แปลกที่จะงงกันตรงนี้
เพราะคนที่ชอบใช้ Rails แต่ไม่เข้าใจการทำ migration มีอยู่จำนวนไม่น้อยเลย</p>

<blockquote>
  <p>มีทั้งแบบที่แค่หยุดทำไฟล์ migration กับอีกแบบคือหนีไปใช้ NoSQL แบบ MongoDB แทน</p>
</blockquote>

<h3 id="แบบฝึกให้ทำหรือคิดตาม-แอปพลิเคชันซื้อขายสินค้า">แบบฝึกให้ทำหรือคิดตาม: แอปพลิเคชันซื้อขายสินค้า</h3>

<p>สมมติว่า เรากำลังทำแอปพลิเคชันที่สามารถวางขายสินค้าและเปิดให้ผู้ซื้อสามารถสั่งซื้อ
ครั้งละหลายรายการได้ โดยมี entity ที่เราจะใช้ตามนี้</p>

<ul>
  <li>Buyer ผู้ซื้อสินค้า</li>
  <li>Product สินค้า</li>
  <li>Order รายการสั่งซื้อสินค้า</li>
</ul>

<blockquote>
  <p>ต่อจากนี้ไป ทุกครั้งหลังการสร้าง model, migration ให้รันคำสั่ง
<code class="language-plaintext highlighter-rouge">rails db:migrate</code></p>
</blockquote>

<h3 id="ออกแบบ-class-ที่จะใช้-ตามลำดับโปรแกรมที่เขียน">ออกแบบ class ที่จะใช้ ตามลำดับโปรแกรมที่เขียน</h3>

<blockquote>
  <p>สมมติว่าเราเริ่มจากการมีสินค้าในระบบก่อน</p>
</blockquote>

<p>สร้าง model ของ <code class="language-plaintext highlighter-rouge">Product</code> โดยการ generate model
จะเป็นการสร้างไฟล์ model และ migration ขึ้นมา</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rails generate model product name:string description:text price:integer
</code></pre></div></div>

<p>ก่อนจะไปต่อกันสามารถลองสร้างไฟล์ migration เพื่อเพิ่ม column ง่ายๆได้ เช่น การให้ <code class="language-plaintext highlighter-rouge">Product</code>
สามารถเก็บจำนวน stock ได้</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rails generate migration add_stock_to_products stock:integer
</code></pre></div></div>

<blockquote>
  <p>จะเห็นได้ว่าเราไม่ได้ระบุชื่อ table เป็น parameter
โดยตรงแต่คำสั่งนี้ก็ยังทำงานตามที่เราต้องการได้ เพราะรูปแบบคำสั่งก็ generate
จากชื่อไฟล์ตามแนวคิด Convention over configuration
(จะ generate ไฟล์เปล่าแล้วเขียนเองก็ได้)</p>
</blockquote>

<p>มีสินค้าแล้วเราก็อยากให้การสั่งซื้อสินค้าแต่ล่ะครั้งของ <code class="language-plaintext highlighter-rouge">Buyer</code> ถูกเก็บไว้ใน <code class="language-plaintext highlighter-rouge">Order</code></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rails generate model buyer email:string
rails generate model order buyer:references
</code></pre></div></div>

<p>references คือการสร้าง foreign key พร้อมกับ index ไปที่ resource นั้น
ซึ่ง <code class="language-plaintext highlighter-rouge">buyer:references</code> ในที่นี้ จะทำให้ table <code class="language-plaintext highlighter-rouge">orders</code>
มี column <code class="language-plaintext highlighter-rouge">buyer_id</code> เพิ่มเข้าไปพร้อมกับสร้าง index ให้ โดยไฟล์ <code class="language-plaintext highlighter-rouge">order.rb</code>
ที่ถูกสร้างขึ้นทีหลังจะมีความสัมพันธ์ระบุ <code class="language-plaintext highlighter-rouge">belongs_to :buyer</code> ระบุให้เลย
แต่ในไฟล์ <code class="language-plaintext highlighter-rouge">buyer.rb</code> เราต้องเข้าไปใส่ ความสัมพันธ์เองตามข้างล่าง</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Buyer</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="n">has_many</span> <span class="ss">:orders</span>
<span class="k">end</span>
</code></pre></div></div>

<p>พอมาถึงตรงนี้ เราอยากจะให้ความสัมพันธ์ของ <code class="language-plaintext highlighter-rouge">Order</code> กับ <code class="language-plaintext highlighter-rouge">Product</code> เป็นแบบ many-to-many
ซึ่งจากประสบการณ์ของผมค้นพบว่าส่วนมากจะหมดใจกันแถวๆนี้แหละ ที่ไม่รู้จะไปไงต่อดี 😅
จะไปต่อกับไฟล์ migration ก็งงๆ จะข้ามส่วนนี้ไปเลยก็เท่ากับว่าไฟล์ก็มีขั้นตอนไม่ครบแล้ว
ฝืนทำต่อไปก็ไม่สมบูรณ์อยู่ดี</p>

<p>แต่เราลองทำต่อตรงนี้ซักหน่อย เพราะ Active Record Migration
มีวิธีใช้งานที่ผมเองเชื่อว่าครอบคลุม 99% ของการใช้งานทั้งหมดแล้ว
กรณีแบบนี้ก็เช่นกัน</p>

<h3 id="สร้างไฟล์-migration-สำหรับ-join-table">สร้างไฟล์ migration สำหรับ Join Table</h3>

<p>เราสามารถสร้างความสัมพันธ์แบบ many-to-many ได้ ด้วยการสร้าง <code class="language-plaintext highlighter-rouge">join table</code>
ซึ่งใช้คำสั่งสร้างแบบนี้</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rails generate migration CreateJoinTableOrdersProducts order product
</code></pre></div></div>

<p>หลังการรัน <code class="language-plaintext highlighter-rouge">rails db:migrate</code> ในครั้งนี้ เนื่องจากเราไม่ได้ generate model ขึ้นใหม่ เราจึงจำเป็นต้อง  ประกาศความสัมพันธ์เองภายในไฟล์ model ของ <code class="language-plaintext highlighter-rouge">Product</code>, <code class="language-plaintext highlighter-rouge">Order</code></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Product</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="n">has_and_belongs_to_many</span> <span class="ss">:orders</span>
<span class="k">end</span>
</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Order</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="n">belongs_to</span> <span class="ss">:buyer</span>
  <span class="n">has_and_belongs_to_many</span> <span class="ss">:products</span>
<span class="k">end</span>
</code></pre></div></div>

<p>มาถึงตรงนี้เราก็น่าจะสามารถลองเล่นกับความสัมพันธ์ใน <code class="language-plaintext highlighter-rouge">rails console</code> ดูได้แบบนี้</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">b</span> <span class="o">=</span> <span class="no">Buyer</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">email: </span><span class="s1">'buyer@test.com'</span><span class="p">)</span>
<span class="n">b</span><span class="p">.</span><span class="nf">save</span>
<span class="c1"># Insert Buyer b</span>

<span class="nb">p</span> <span class="o">=</span> <span class="no">Product</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">name: </span><span class="s1">'The Shirt'</span><span class="p">)</span>
<span class="nb">p</span><span class="p">.</span><span class="nf">save</span>
<span class="c1"># Insert Product p</span>

<span class="n">o</span> <span class="o">=</span> <span class="no">Order</span><span class="p">.</span><span class="nf">new</span>
<span class="n">o</span><span class="p">.</span><span class="nf">products</span> <span class="o">&lt;&lt;</span> <span class="nb">p</span>
<span class="n">o</span><span class="p">.</span><span class="nf">buyer</span> <span class="o">=</span> <span class="n">b</span>
<span class="n">o</span><span class="p">.</span><span class="nf">save</span>
<span class="c1"># Insert Order o with Buyer b, Product p</span>
</code></pre></div></div>

<h3 id="สิ่งที่อยากให้สนใจหลังแบบฝึกข้างบน">สิ่งที่อยากให้สนใจหลังแบบฝึกข้างบน</h3>

<p>อยากให้ลองศึกษาไฟล์ migration ที่ถูกสร้างขึ้นมาเรียงตามลำดับแล้ว
อาจจะลองรันคำสั่ง <code class="language-plaintext highlighter-rouge">rails db:rollback</code> เปลี่ยนแปลงค่าบางอย่าง แล้วลอง <code class="language-plaintext highlighter-rouge">rails db:migrate</code>
อีกครั้งเพื่อดูผลลัพธ์ที่เกิดขึ้น โดยดูตัวอย่างทั้งหมดจาก
<a href="https://guides.rubyonrails.org/active_record_migrations.html">Official Doc</a></p>

<p>และศึกษาการเปลี่ยนแปลงของไฟล์ <code class="language-plaintext highlighter-rouge">db/schema.rb</code> ไปพร้อมๆกัน</p>

<h3 id="schemarb-คือ-single-source-of-truth-ของ-database-schema"><code class="language-plaintext highlighter-rouge">schema.rb</code> คือ Single Source of Truth ของ Database Schema</h3>

<p>หนึ่งในจุดที่ผมจะเข้าไปเปิดดูเป็นไฟล์แรกๆ หากได้รับมอบหมายให้ทำงานใน Ruby on Rails
แอปพลิเคชัน ก็คือไฟล์ <code class="language-plaintext highlighter-rouge">schema.rb</code> เพราะเป็นไฟล์ที่เราสามารถมองเห็น
ภาพรวมความซับซ้อนของระบบฐานข้อมูลภายในได้ภายในไฟล์เดียว</p>

<h3 id="ถ้าจำนวนไฟล์-migrations-เยอะขึ้นจนจัดการไม่ไหว">ถ้าจำนวนไฟล์ migrations เยอะขึ้นจนจัดการไม่ไหว</h3>

<p>หนึ่งในข้อกังวลอย่างหนึ่งของการเริ่มทำไฟล์ migration ที่ค่อนข้างมีเหตุผล แต่ Active Record
Migration ก็วางแนวทางไว้รับมือแล้ว โดยที่เราสามารถ…</p>

<p>ย้ายไฟล์ที่เก่ามากไปวางที่อื่นหรือลบทิ้งได้เลย แล้วใช้วิธีสร้างฐานข้อมูลเริ่มต้นด้วยคำสั่ง
<code class="language-plaintext highlighter-rouge">rails db:schema:load</code> ให้สร้างฐานข้อมูลตามข้อมูลใน <code class="language-plaintext highlighter-rouge">schema.rb</code> แทนการใช้คำสั่ง
<code class="language-plaintext highlighter-rouge">rails db:migrate</code> เพื่อรันคำสั่งทั้งหมดทีล่ะคำสั่ง</p>

<p><code class="language-plaintext highlighter-rouge">rails db:schema:dump</code> คือคำสั่งตรงข้ามของการ load เป็นคำสั่งที่เอาข้อมูล schema ในฐานข้อมูลที่เชื่อมต่อลงเก็บที่ <code class="language-plaintext highlighter-rouge">schema.rb</code></p>

<h3 id="การตรวจสอบสถานะของ-database-migration">การตรวจสอบสถานะของ database migration</h3>

<p>ใช้คำสั่ง <code class="language-plaintext highlighter-rouge">rails  db:migrate:status</code> เพื่อเรียกดูข้อมูลใน terminal
โดยจะเห็นแบบตัวอย่างข้างล่าง</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Status   Migration ID    Migration Name
<span class="nt">--------------------------------------------------</span>
   up     20240508063759  <span class="k">**********</span> NO FILE <span class="k">**********</span>
   up     20240602151931  Create products
   up     20240602154948  Create buyers
   up     20240602155002  Create orders
   up     20240602161438  Create <span class="nb">join </span>table orders products
  down    20240602161959  Add stock to products
</code></pre></div></div>

<h3 id="ข้อดีและข้อเสียของการทำ-migration-แบบนี้">ข้อดีและข้อเสียของการทำ Migration แบบนี้</h3>

<table>
  <thead>
    <tr>
      <th>ข้อดี</th>
      <th>ข้อเสีย</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>สามารถติดตามการเปลี่ยนแปลงได้ Git Version Control เพราะการเปลี่ยนแปลงทั้งหมดถูกทำผ่าน code</td>
      <td>การจัดการด้วย Ruby code ทั้งหมด อาจไม่เหมาะกับองค์กรที่ใช้ DBA แยก เพราะ DBA อาจจะเคืองถ้าโดนบังคับให้เรียน Ruby เพิ่ม 😂</td>
    </tr>
    <tr>
      <td>เพิ่ม abstraction layer ขึ้นมาเพื่อรองรับการเขียน code ครั้งเดียวให้ใช้ได้หลายฐานข้อมูล เช่น สามารถเปลี่ยนไปใช้ MySQL จาก PostgreSQL ได้ทันที</td>
      <td>การ execute คำสั่งโดยตรงอาจมีผลเสียกับ performance ในระบบฐานข้อมูลขนาดใหญ่ ต้องวางแผนให้ดี</td>
    </tr>
    <tr>
      <td>รองรับการ migrate ละ rollback ผ่านคำสั่งที่ program ได้</td>
      <td>ความเสี่ยงจากการทำ data loss ระหว่าง migration เหมือนข้างบน</td>
    </tr>
    <tr>
      <td>การเปลี่ยน schema แต่ล่ะครั้ง สามารถ test ได้</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h3 id="alternatively-ถ้าไม่ใช้-ruby-on-rails-แต่อยากได้แบบนี้จะใช้อะไรได้บ้าง">Alternatively ถ้าไม่ใช้ Ruby on Rails แต่อยากได้แบบนี้จะใช้อะไรได้บ้าง</h3>

<ul>
  <li>Liquibase</li>
  <li>Atlas</li>
  <li>golang-migrate</li>
  <li>Gorm</li>
  <li>Prisma</li>
  <li>etc.</li>
</ul>]]></content><author><name>wittawasw</name><email>your-email@domain.com</email></author><category term="rails" /><category term="database" /><summary type="html"><![CDATA[ลองพยายามเขียนอะไรซักอย่างขึ้นมาอุดช่องว่าง สำหรับคนที่พอเข้าใจการทำงานของฐานข้อมูลอยู่แล้ว แต่แค่ไม่ได้ทำงานด้วย Ruby on Rails มาก่อน ให้สามารถเห็นภาพการทำงานที่ชัดขึ้น]]></summary></entry><entry><title type="html">Rate Limit ใน Ruby on Rails</title><link href="https://wittawasw.com/2024/04/19/rails-default-rate-limit.html" rel="alternate" type="text/html" title="Rate Limit ใน Ruby on Rails" /><published>2024-04-19T07:28:00+07:00</published><updated>2024-04-19T07:28:00+07:00</updated><id>https://wittawasw.com/2024/04/19/rails-default-rate-limit</id><content type="html" xml:base="https://wittawasw.com/2024/04/19/rails-default-rate-limit.html"><![CDATA[<p>Rate Limit เป็นหนึ่งในปัญหาที่ทุก tech stack มีวิธีการแก้ปัญหาที่คล้ายกัน ถึงแม้ว่ารายละเอียดการ
implement จะแตกต่างกันบ้าง แต่ลักษณะการทำงานเบื้องต้นจะคล้ายกันเสมอ คือ</p>

<ul>
  <li>request จาก client ไปถึง server</li>
  <li>server ทำการนับจำนวน request ที่เข้ามาแต่ล่ะครั้ง โดยเก็บจำนวนของ request ใน datastore</li>
  <li>ตรวจสอบว่า request ที่เข้ามาถ้านับรวมกับจำนวนเดิมที่เก็บ จะเกิน limit ตามที่กำหนดไว้หรือยัง
โดยอาจกำหนดเป็น limit ของจำนวนของ request ภายในช่วงเวลา เช่น
100 requests ต่อ 10 นาที</li>
  <li>ปฏิเสธ request ถ้า เกิน limit และยอมให้ผ่านไปถึง resource ได้ถ้าไม่เกิน</li>
</ul>

<h3 id="resource">Resource</h3>

<p>อาจหมายถึง database โดยตรงหรือ service อื่นที่เราต้องการลดความเสี่ยงที่จะ
ทำงานเกินกำลังและทำให้ระบบเกิด downtime หรือ error อื่นๆ</p>

<h3 id="datastore">Datastore</h3>

<p>ส่วนที่ใช้เก็บค่าจำนวน request ซึ่งเป็นได้ทั้งการเก็บโดยตรงภายในหน่วยความจำหรือการเก็บภายใน
ซอฟต์แวร์ฐานข้อมูล ขึ้นอยู่กับลักษณะการใช้งาน ที่หากเป็นการใช้ภายใน process เดียวกัน ก็อาจเก็บค่า
ภายในหน่วยความจำโดยตรง แต่หากมีจำนวน server ที่รองรับหลายอัน แล้วต้องการจำกัดจำนวน limit
ร่วมกันก็ควรใช้ซอฟต์แวร์ฐานข้อมูลช่วย</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+--------+            +---------+            +-----------+
|        |-----------&gt;|         |-----------&gt;|           |
| Client |            | Server  |            | Resources |
|        |&lt;-----------|         |&lt;-----------|           |
+--------+            +---------+            +-----------+
                          |
                          |
                          v
                    +-------------+
                    |  Datastore  |
                    +-------------+
</code></pre></div></div>

<p style="text-align: center;"><em>แบบง่ายที่เป็นการใช้ภายใน process เดียว</em></p>
<p style="text-align: center;"><em>---------------------</em></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+--------+            +--------+
|        |            |        |
|        |     ------&gt;| Server |&lt;-
|        |    /       |        |  \
|        |   /        +--------+   \
|        |  /         +--------+    \            +-----------+
|        |&lt;-          |        |     \           |           |
| Client |&lt;----------&gt;| Server |&lt;---------------&gt;| Resources |
|        |&lt;-          |        |&lt;-     \         |           |
|        |  \         +--------+  \     \        +-----------+
|        |   \        +--------+   \     \       +-------------+
|        |    \       |        |&lt;---------------&gt;|  Datastore  |
|        |     ------&gt;| Server |                 +-------------+
|        |            |        |
+--------+            +--------+
</code></pre></div></div>
<p style="text-align: center;"><em>แบบที่ใช้ datastore ร่วมกัน</em></p>

<h2 id="ความซับซ้อนที่เกิดขึ้นเสมอ">ความซับซ้อนที่เกิดขึ้นเสมอ</h2>

<p>หาก resource ที่เราต้องกันการเข้าถึง มีความต้องการในการจำกัดที่แตกต่างกัน รูปแบบการทำ
rate limit ก็จะเพิ่มความซับซ้อนและความยุ่งยากในการดูแลมากขึ้น แนวคิดและรูปแบบการทำ
rate limit ของ Rails จึงช่วยได้มาก หากไม่มีความเข้าใจ หรือไม่ต้องการ implement ด้วยตัวเอง</p>

<h2 id="ตัวอย่างการ-rate-limit-แยกตาม-controller-ของ-rails">ตัวอย่างการ Rate Limit แยกตาม controller ของ Rails</h2>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">class</span> <span class="nc">SessionsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="c1"># จำกัด 10 requests ต่อ 3 นาที</span>
  <span class="c1"># ที่ method: :create เท่านั้น</span>
  <span class="n">rate_limit</span> <span class="ss">to: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">within: </span><span class="mi">3</span><span class="p">.</span><span class="nf">minutes</span><span class="p">,</span> <span class="ss">only: :create</span>
<span class="k">end</span>

<span class="k">class</span> <span class="nc">SignupsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="c1"># จำกัด 1000 requests ต่อ 10 วินาที</span>
  <span class="c1"># แยกตาม domain name ที่ request</span>
  <span class="c1"># โดยให้ redirect ไปที่ busy_controller_url พร้อมกับ alert</span>
  <span class="c1"># ที่ method: :new เท่านั้น</span>
  <span class="n">rate_limit</span> <span class="ss">to: </span><span class="mi">1000</span><span class="p">,</span> <span class="ss">within: </span><span class="mi">10</span><span class="p">.</span><span class="nf">seconds</span><span class="p">,</span>
    <span class="ss">by: </span><span class="o">-&gt;</span> <span class="p">{</span> <span class="n">request</span><span class="p">.</span><span class="nf">domain</span> <span class="p">},</span>
    <span class="ss">with: </span><span class="o">-&gt;</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="n">busy_controller_url</span><span class="p">,</span> <span class="ss">alert: </span><span class="s2">"Too many signups on domain!"</span> <span class="p">},</span>
    <span class="ss">only: :new</span>
<span class="k">end</span>

<span class="k">class</span> <span class="nc">APIController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="c1"># จำกัด 10 requests ต่อ 3 นาที</span>
  <span class="c1"># โดยใช้ datastore เป็น redis ที่ REDIS_URL</span>
  <span class="no">RATE_LIMIT_STORE</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Cache</span><span class="o">::</span><span class="no">RedisCacheStore</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">url: </span><span class="no">ENV</span><span class="p">[</span><span class="s2">"REDIS_URL"</span><span class="p">])</span>
  <span class="n">rate_limit</span> <span class="ss">to: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">within: </span><span class="mi">3</span><span class="p">.</span><span class="nf">minutes</span><span class="p">,</span> <span class="ss">store: </span><span class="no">RATE_LIMIT_STORE</span>
<span class="k">end</span>
</code></pre></div></div>

<p>ที่มา: <a href="https://github.com/rails/rails/blob/main/actionpack/lib/action_controller/metal/rate_limiting.rb">github.com/rails/rails</a></p>

<blockquote>
  <p>ปัจจุบัน ณ วันที่เขียน blog นี้
feature ยังไม่ได้ถูก release เป็น version แต่ถูกรวมอยู่ใน <code class="language-plaintext highlighter-rouge">main</code> แล้ว</p>
</blockquote>]]></content><author><name>wittawasw</name><email>your-email@domain.com</email></author><category term="rails," /><category term="rate" /><category term="limit" /><summary type="html"><![CDATA[Rate Limit เป็นหนึ่งในปัญหาที่ทุก tech stack มีวิธีการแก้ปัญหาที่คล้ายกัน ถึงแม้ว่ารายละเอียดการ implement จะแตกต่างกันบ้าง แต่ลักษณะการทำงานเบื้องต้นจะคล้ายกันเสมอ]]></summary></entry><entry><title type="html">วิธีใช้ ovpn profile ที่มี pin code ของ Pritunl ด้วย openvpn ผ่าน command-line</title><link href="https://wittawasw.com/2024/04/17/how-to-use-pritunl-ovpn-in-cli.html" rel="alternate" type="text/html" title="วิธีใช้ ovpn profile ที่มี pin code ของ Pritunl ด้วย openvpn ผ่าน command-line" /><published>2024-04-17T16:47:00+07:00</published><updated>2024-04-17T16:47:00+07:00</updated><id>https://wittawasw.com/2024/04/17/how-to-use-pritunl-ovpn-in-cli</id><content type="html" xml:base="https://wittawasw.com/2024/04/17/how-to-use-pritunl-ovpn-in-cli.html"><![CDATA[<p>นั่งหาวิธีการใช้ VPN profile ของ Pritunl ด้วย CLI เพราะเบื่อการที่ Pritunl Client มักจะหลุดและต้องมาคอยใส่ pin ใหม่อยู่เรื่อยๆ</p>

<h3 id="คำสั่งในการรัน-vpn">คำสั่งในการรัน VPN</h3>

<p>ใช้ client ของ openvpn โดยถ้าใน MacOS สามารถ install ผ่าน <a href="https://formulae.brew.sh/formula/openvpn">Homebrew</a> ได้</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># เมื่อ profile ที่ใช้อยู่ใน file ชื่อ profile.vpn</span>
<span class="c"># และ username, pin code อยู่ใน pass.txt</span>
<span class="c"># --daemon คือ การสั่งให้ daemonize process</span>
<span class="nb">sudo </span>openvpn <span class="nt">--config</span> profile.ovpn <span class="nt">--auth-user-pass</span> <span class="s2">"pass.txt"</span> <span class="nt">--daemon</span>
</code></pre></div></div>

<h3 id="ตัวอย่างไฟล์-passtxt">ตัวอย่างไฟล์ <code class="language-plaintext highlighter-rouge">pass.txt</code></h3>

<ul>
  <li>เมื่อ username = username@example.com</li>
  <li>และ pin code = 123456</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>username@example.com
123456
</code></pre></div></div>]]></content><author><name>wittawasw</name><email>your-email@domain.com</email></author><category term="pritunl," /><category term="vpn," /><category term="openvpn," /><category term="cli" /><summary type="html"><![CDATA[นั่งหาวิธีการใช้ VPN profile ของ Pritunl ด้วย CLI เพราะเบื่อการที่ Pritunl Client มักจะหลุดและต้องมาคอยใส่ pin ใหม่อยู่เรื่อยๆ]]></summary></entry><entry><title type="html">การเขียน Test ไม่ได้หมายความว่าเราต้องใช้ Test Runner เสมอไป</title><link href="https://wittawasw.com/2024/04/09/unit-testings-without-test-runner.html" rel="alternate" type="text/html" title="การเขียน Test ไม่ได้หมายความว่าเราต้องใช้ Test Runner เสมอไป" /><published>2024-04-09T13:16:00+07:00</published><updated>2024-04-09T13:16:00+07:00</updated><id>https://wittawasw.com/2024/04/09/unit-testings-without-test-runner</id><content type="html" xml:base="https://wittawasw.com/2024/04/09/unit-testings-without-test-runner.html"><![CDATA[<p>อาทิตย์ก่อนมีโอกาสได้ร่วม training ในหัวข้อ TDD แล้วก็รู้สึกว่าหลายคนมี mindset ประมาณว่า</p>

<blockquote>
  <p>ไม่ต้องเขียน test ถ้ายังไม่มี Test Runner</p>
</blockquote>

<p>ซึ่งผมมองว่า <u>ผิด</u> โดยความเห็นของผมคือ ต่อให้ใน project ไม่มี test runner
อยู่ เราก็ควรเขียน Unit Test เป็นอย่างน้อยอยู่ดี</p>

<p>หลังจากที่ได้ไป pair กับคนที่ทำ Javascript, Python ที่ไม่เคย setup Test Runner
มาก่อนก็เลยได้ลองเขียน <code class="language-plaintext highlighter-rouge">assertion</code> แบบง่ายๆ ให้ดูว่าสุดท้ายแล้วการเขียน test ก็แค่
การเขียนฟังก์ชันให้เรียกใช้ฟังก์ชันที่เราต้องการทดสอบและเปรียบเทียบผลลัพธ์เท่านั้นเอง</p>

<p>Code ส่วนของ Javascript ทำที่เครื่องคนอื่นก็เลยไม่ได้เก็บไว้ มีแต่ Python
ที่ทำในเครื่องตัวเองก็เลยยังอยู่ แต่จริงๆแล้วเลือกใช้ ภาษา Dart ตอน training
เพราะเป็นภาษาที่ใช้ในงานปัจจุบัน แต่ยังไม่คล่อง ก็เลยถือโอกาสลองฝึกไปด้วย</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span><span class="p">,</span> <span class="n">timedelta</span>

<span class="n">months</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">"3"</span><span class="p">:</span> <span class="p">[</span><span class="mi">31</span><span class="p">,</span> <span class="mi">31</span><span class="p">],</span>
  <span class="s">"4"</span><span class="p">:</span> <span class="p">[</span><span class="mi">30</span><span class="p">,</span> <span class="mi">3000</span><span class="p">],</span>
  <span class="s">"5"</span><span class="p">:</span> <span class="p">[</span><span class="mi">31</span><span class="p">,</span> <span class="mi">3100</span><span class="p">],</span>
  <span class="s">"6"</span><span class="p">:</span> <span class="p">[</span><span class="mi">30</span><span class="p">,</span> <span class="mi">3000</span><span class="p">],</span>
  <span class="s">"7"</span><span class="p">:</span> <span class="p">[</span><span class="mi">31</span><span class="p">,</span> <span class="mi">31</span><span class="p">],</span>
<span class="p">}</span>

<span class="n">months_arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">31</span><span class="p">,</span> <span class="mi">3000</span><span class="p">,</span> <span class="mi">3100</span><span class="p">,</span> <span class="mi">3000</span><span class="p">,</span> <span class="mi">31</span><span class="p">]</span>

<span class="k">def</span> <span class="nf">getBudgets</span><span class="p">(</span><span class="n">from_date</span><span class="p">,</span> <span class="n">to_date</span><span class="p">):</span>
  <span class="n">from_date</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="n">strptime</span><span class="p">(</span><span class="n">from_date</span><span class="p">,</span> <span class="s">"%Y-%m-%d"</span><span class="p">)</span>
  <span class="n">to_date</span>   <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="n">strptime</span><span class="p">(</span><span class="n">to_date</span><span class="p">,</span> <span class="s">"%Y-%m-%d"</span><span class="p">)</span>

  <span class="k">if</span> <span class="p">(</span><span class="n">to_date</span> <span class="o">-</span> <span class="n">from_date</span><span class="p">).</span><span class="n">days</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="k">return</span> <span class="s">"Error"</span>

  <span class="n">values</span> <span class="o">=</span> <span class="p">[]</span>
  <span class="n">current_date</span> <span class="o">=</span> <span class="n">from_date</span>

  <span class="k">while</span> <span class="n">current_date</span> <span class="o">&lt;=</span> <span class="n">to_date</span><span class="p">:</span>
    <span class="n">values</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">months</span><span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">current_date</span><span class="p">.</span><span class="n">month</span><span class="p">)][</span><span class="mi">1</span><span class="p">]</span> <span class="o">/</span> <span class="n">months</span><span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">current_date</span><span class="p">.</span><span class="n">month</span><span class="p">)][</span><span class="mi">0</span><span class="p">])</span>
    <span class="n">current_date</span> <span class="o">+=</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

  <span class="k">return</span> <span class="nb">sum</span><span class="p">(</span><span class="n">values</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">testGetBudgets</span><span class="p">(</span><span class="n">from_date</span><span class="p">,</span> <span class="n">to_date</span><span class="p">,</span> <span class="n">expect</span><span class="p">):</span>
  <span class="n">test_case</span> <span class="o">=</span> <span class="s">"Test: "</span> <span class="o">+</span> <span class="n">from_date</span> <span class="o">+</span> <span class="s">" : "</span> <span class="o">+</span> <span class="n">to_date</span> <span class="o">+</span> <span class="s">" = "</span>

  <span class="n">actual</span> <span class="o">=</span> <span class="n">getBudgets</span><span class="p">(</span><span class="n">from_date</span><span class="p">,</span> <span class="n">to_date</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">actual</span> <span class="o">==</span> <span class="n">expect</span><span class="p">:</span>
    <span class="k">return</span> <span class="n">test_case</span> <span class="o">+</span> <span class="s">"Passed"</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">return</span> <span class="n">test_case</span> <span class="o">+</span> <span class="s">"Failed"</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span> <span class="sa">f</span><span class="s">"Expected: </span><span class="si">{</span><span class="n">expect</span><span class="si">}</span><span class="s">, got </span><span class="si">{</span><span class="n">actual</span><span class="si">}</span><span class="s">"</span>


<span class="k">print</span><span class="p">(</span><span class="n">testGetBudgets</span><span class="p">(</span><span class="s">"2024-07-02"</span><span class="p">,</span> <span class="s">"2024-07-04"</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">testGetBudgets</span><span class="p">(</span><span class="s">"2024-07-04"</span><span class="p">,</span> <span class="s">"2024-07-02"</span><span class="p">,</span> <span class="s">"Error"</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">testGetBudgets</span><span class="p">(</span><span class="s">"2024-06-20"</span><span class="p">,</span> <span class="s">"2024-07-04"</span><span class="p">,</span> <span class="mi">1100</span> <span class="o">+</span> <span class="mi">4</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">testGetBudgets</span><span class="p">(</span><span class="s">"2024-03-10"</span><span class="p">,</span> <span class="s">"2024-07-02"</span><span class="p">,</span> <span class="mi">22</span> <span class="o">+</span> <span class="mi">9100</span> <span class="o">+</span> <span class="mi">2</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">testGetBudgets</span><span class="p">(</span><span class="s">"2024-06-18"</span><span class="p">,</span> <span class="s">"2024-07-04"</span><span class="p">,</span> <span class="mi">1300</span> <span class="o">+</span> <span class="mi">4</span><span class="p">))</span>
</code></pre></div></div>]]></content><author><name>wittawasw</name><email>your-email@domain.com</email></author><category term="tdd," /><category term="testing," /><category term="python" /><summary type="html"><![CDATA[อาทิตย์ก่อนมีโอกาสได้ร่วม training ในหัวข้อ TDD แล้วก็รู้สึกว่าหลายคนมี mindset ประมาณว่า]]></summary></entry><entry><title type="html">จัดรูปแบบของ paragraph ให้เหมือนหนังสือด้วย text-justify</title><link href="https://wittawasw.com/2024/03/29/text-indent-and-text-justify.html" rel="alternate" type="text/html" title="จัดรูปแบบของ paragraph ให้เหมือนหนังสือด้วย text-justify" /><published>2024-03-29T19:55:00+07:00</published><updated>2024-03-29T19:55:00+07:00</updated><id>https://wittawasw.com/2024/03/29/text-indent-and-text-justify</id><content type="html" xml:base="https://wittawasw.com/2024/03/29/text-indent-and-text-justify.html"><![CDATA[<p>เร็วๆนี้มีเหตุให้ต้องทำการ render HTML เพื่อแปลงเป็น PDF สำหรับใช้เป็นเอกสารทางการ
ก็เลยได้วิธีจัดย่อหน้ามาใช้ด้วย ถ้าต้องทำรูปแบบเหมือนจดหมายทางการ</p>

<blockquote>
  <p>วิธีการก็คือใช้ CSS แบบนี้</p>
</blockquote>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">p</span><span class="nc">.indented-full</span> <span class="p">{</span>
  <span class="c">/* เว้นช่องว่างในบรรทัดแรกของ paragraph */</span>
  <span class="nl">text-indent</span><span class="p">:</span> <span class="m">30px</span><span class="p">;</span>
  <span class="c">/* ขยายช่องว่างระหว่างคำให้เต็มบรรทัด */</span>
  <span class="nl">text-align</span><span class="p">:</span> <span class="nb">justify</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>ลองเอามาใส่ใน blog นี้ด้วยเลย แต่รู้สึกไม่ชอบการ indent บรรทัดแรกบนหน้าเว็บ ก็เลยใส่แค่
<code class="language-plaintext highlighter-rouge">text-aligm: justtify;</code> ก็พอ</p>]]></content><author><name>wittawasw</name><email>your-email@domain.com</email></author><category term="css," /><category term="html" /><summary type="html"><![CDATA[เร็วๆนี้มีเหตุให้ต้องทำการ render HTML เพื่อแปลงเป็น PDF สำหรับใช้เป็นเอกสารทางการ ก็เลยได้วิธีจัดย่อหน้ามาใช้ด้วย ถ้าต้องทำรูปแบบเหมือนจดหมายทางการ]]></summary></entry><entry><title type="html">อนาคตของนักพัฒนาซอฟต์แวร์ในยุคถัดไปที่ AI รุ่งเรือง</title><link href="https://wittawasw.com/2024/03/28/the-future-of-software-developer-jobs.html" rel="alternate" type="text/html" title="อนาคตของนักพัฒนาซอฟต์แวร์ในยุคถัดไปที่ AI รุ่งเรือง" /><published>2024-03-28T22:42:00+07:00</published><updated>2024-03-28T22:42:00+07:00</updated><id>https://wittawasw.com/2024/03/28/the-future-of-software-developer-jobs</id><content type="html" xml:base="https://wittawasw.com/2024/03/28/the-future-of-software-developer-jobs.html"><![CDATA[<p>ได้มีโอกาสเห็นการกลับมา trending ของหัวข้อที่ว่า AI อย่าง devin จะทำให้นักพัฒนาซอฟต์แวร์สูญพันธ์ได้ แต่ถ้าถามผม ผมก็คงตอบว่า ผมไม่ได้กังวลเท่าไหร่ เพราะในทรรศนะส่วนตัวแล้ว เชื่อว่าตัวเองน่าจะรอดหรืออย่างน้อยก็ไม่ใช่กลุ่มแรกๆที่โดนแทนที่ได้</p>

<blockquote>
  <p>ในอีก 20 ปี นักพัฒนาซอฟต์แวร์จะเป็นอาชีพที่หายไปหรือไม่ ?</p>
</blockquote>

<p>เชื่อว่า “ไม่” แต่ไม่หายไปในที่นี้ เพียงแค่ไม่เหลือ 0 เท่านั้น เชื่อว่าเราจะยังต้องการผู้เชี่ยวชาญจำนวนหนึ่งในการทำงานร่วมกับ AI เปรียบเทียบได้กับการปฏิวัติเกษตรกรรมกับอุตสาหกรรมที่ผ่านมา ก็ไม่ได้ทำให้อาชีพทั้งสองหายไปจนเป็น 0 แต่ก็ทำให้จำนวนตำแหน่งงานเหลือน้อยลงมาก</p>

<blockquote>
  <p>คิดว่าควรจะเรียน หรือศึกษาด้านไหนเพื่อไม่ให้ถูกแทนที่ได้ ?</p>
</blockquote>

<p>เชื่อว่าไม่มีอาชีพไหนรอดเลย แม้แต่อาชีพเดียว ยกตัวอย่างจากที่ผู้ก่อตั้ง Nvidia ให้สัมภาษณ์ว่าควรเรียนด้านเคมี กับชีววิทยามากกว่า ก็ค่อนข้างย้อนแย้งในความก้าวหน้าของ AI ที่สามารถทำงานปัจจุบันของกลุ่มอาชีพด้านการวิทยาศาสตร์ได้ดีมากแล้ว การวิเคราะห์ข้อมูลจากผลการทดลองก็ใช้ AI วิเคราะห์ได้ หรือการเก็บข้อมูลทางวิทยาศาสตร์ต่างๆก็ใช้หุ่นยนต์แทนที่ได้เหมือนกัน</p>]]></content><author><name>wittawasw</name><email>your-email@domain.com</email></author><category term="thought," /><category term="devin" /><summary type="html"><![CDATA[ได้มีโอกาสเห็นการกลับมา trending ของหัวข้อที่ว่า AI อย่าง devin จะทำให้นักพัฒนาซอฟต์แวร์สูญพันธ์ได้ แต่ถ้าถามผม ผมก็คงตอบว่า ผมไม่ได้กังวลเท่าไหร่ เพราะในทรรศนะส่วนตัวแล้ว เชื่อว่าตัวเองน่าจะรอดหรืออย่างน้อยก็ไม่ใช่กลุ่มแรกๆที่โดนแทนที่ได้]]></summary></entry><entry><title type="html">เพิ่ม SSH key ให้ ssh-agent ใน MacOS</title><link href="https://wittawasw.com/2024/02/27/add-ssh-key-to-ssh-agent-in-macos.html" rel="alternate" type="text/html" title="เพิ่ม SSH key ให้ ssh-agent ใน MacOS" /><published>2024-02-27T09:59:00+07:00</published><updated>2024-02-27T09:59:00+07:00</updated><id>https://wittawasw.com/2024/02/27/add-ssh-key-to-ssh-agent-in-macos</id><content type="html" xml:base="https://wittawasw.com/2024/02/27/add-ssh-key-to-ssh-agent-in-macos.html"><![CDATA[<p>เพิ่งค้นพบว่า MacOS หลังกลับมาใช้ไม่นาน ว่าไม่เรียกใช้ SSH key ในชื่ออื่นที่ไม่ใช้การใช้ <code class="language-plaintext highlighter-rouge">id_</code> นำหน้าแล้วตามด้วย algorithm ที่ใช้เข้ารหัส เช่น <code class="language-plaintext highlighter-rouge">id_rsa</code>, <code class="language-plaintext highlighter-rouge">id_ed25519</code> ตั้งแต่ต้น</p>

<p>แต่เนื่องจากติดนิสัยในการสร้าง key ตามงานที่ใช้มาตลอดตั้งแต่ที่ใช้ Ubuntu ว่าจะไม่ใช้ key ซ้ำกันในแต่ล่ะงาน ก็เลยมีปัญหาเล็กน้อยก่อนเริ่มงานล่าสุด เช่น ถ้าชื่องาน <code class="language-plaintext highlighter-rouge">wittawasw</code> ก็จะตั้งชื่อ key เป็น <code class="language-plaintext highlighter-rouge">wittawasw_rsa</code> หรือ <code class="language-plaintext highlighter-rouge">wittawasw_ed25519</code></p>

<h3 id="ทางแก้-ใช้คำสั่งเพิ่ม-ssh-key-ให้-ssh-agent-โดยตรง">ทางแก้: ใช้คำสั่งเพิ่ม SSH key ให้ ssh-agent โดยตรง</h3>

<p>นอกจากขั้นตอนปกติที่เราแก้ใน file <code class="language-plaintext highlighter-rouge">~/.ssh/config</code> แล้ว การเพิ่ม SSH key ที่สร้างใหม่ให้สามารถใช้งานได้ ใน MacOS ต้องทำการเพิ่มเข้า Apple Keychain ด้วยคำสั่ง</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-add <span class="nt">--apple-use-keychain</span> ~/.ssh/wittawasw_rsa
</code></pre></div></div>]]></content><author><name>wittawasw</name><email>your-email@domain.com</email></author><category term="macos," /><category term="ssh" /><summary type="html"><![CDATA[เพิ่งค้นพบว่า MacOS หลังกลับมาใช้ไม่นาน ว่าไม่เรียกใช้ SSH key ในชื่ออื่นที่ไม่ใช้การใช้ id_ นำหน้าแล้วตามด้วย algorithm ที่ใช้เข้ารหัส เช่น id_rsa, id_ed25519 ตั้งแต่ต้น]]></summary></entry><entry><title type="html">ติดตั้ง GVM กับ Go 1.22 บน MacOS ตั้งแต่ต้น</title><link href="https://wittawasw.com/2024/02/14/install-go1-22-in-macos.html" rel="alternate" type="text/html" title="ติดตั้ง GVM กับ Go 1.22 บน MacOS ตั้งแต่ต้น" /><published>2024-02-14T10:51:00+07:00</published><updated>2024-02-14T10:51:00+07:00</updated><id>https://wittawasw.com/2024/02/14/install-go1-22-in-macos</id><content type="html" xml:base="https://wittawasw.com/2024/02/14/install-go1-22-in-macos.html"><![CDATA[<blockquote>
  <p>บทความนี้จะทำการติดตั้ง Go เวอร์ชั่น 1.22 โดยผ่าน <a href="https://github.com/moovweb/gvm">GVM</a> เพื่อเผื่อทางเลือกสำหรับการติดตั้งเวอร์ชั่นอื่นด้วย</p>
</blockquote>

<p>อ้างอิง:</p>
<ul>
  <li><a href="https://github.com/moovweb/gvm">https://github.com/moovweb/gvm</a></li>
  <li><a href="https://formulae.brew.sh/">homebrew</a></li>
  <li><a href="https://go.dev/">Go</a></li>
</ul>

<h2 id="ติดตั้ง-gvm">ติดตั้ง gvm</h2>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># ความต้องการของ script ติดตั้ง</span>
xcode-select <span class="nt">--install</span>
brew update
brew <span class="nb">install </span>mercurial

<span class="c"># ติดตั้ง gvm</span>
bash &lt; &lt;<span class="o">(</span>curl <span class="nt">-s</span> <span class="nt">-S</span> <span class="nt">-L</span> https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer<span class="o">)</span>
</code></pre></div></div>

<h2 id="ติดตั้ง-go">ติดตั้ง Go</h2>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># เนื่องจาก Go 1.5+ ต้องใช้ Go ในการ compile จึงเลือกใช้การติดตั้งผ่าน Homebrew ก่อน เพื่อความสะดวก</span>
brew <span class="nb">install </span>go

<span class="c"># ติดตั้ง Go 1.22</span>
gvm <span class="nb">install </span>go1.22

<span class="c"># ตั้งค่าให้ใช้ Go 1.22 เป็นค่าเริ่มต้น</span>
gvm use go1.22 <span class="nt">--default</span>
</code></pre></div></div>

<h2 id="ตรวจสอบ-go-ที่ติดตั้ง">ตรวจสอบ Go ที่ติดตั้ง</h2>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>go version
<span class="c"># =&gt; go version go1.22.0 darwin/arm64</span>
</code></pre></div></div>]]></content><author><name>wittawasw</name><email>your-email@domain.com</email></author><category term="gvm," /><category term="golang," /><category term="install," /><category term="macos" /><summary type="html"><![CDATA[บทความนี้จะทำการติดตั้ง Go เวอร์ชั่น 1.22 โดยผ่าน GVM เพื่อเผื่อทางเลือกสำหรับการติดตั้งเวอร์ชั่นอื่นด้วย]]></summary></entry><entry><title type="html">Convert PDF เป็นสีขาวดำบน Ubuntu ด้วย imagemagick</title><link href="https://wittawasw.com/2024/01/22/convert-pdf-grayscale-ubuntu.html" rel="alternate" type="text/html" title="Convert PDF เป็นสีขาวดำบน Ubuntu ด้วย imagemagick" /><published>2024-01-22T07:48:00+07:00</published><updated>2024-01-22T07:48:00+07:00</updated><id>https://wittawasw.com/2024/01/22/convert-pdf-grayscale-ubuntu</id><content type="html" xml:base="https://wittawasw.com/2024/01/22/convert-pdf-grayscale-ubuntu.html"><![CDATA[<p>ใช้คำสั่ง</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>convert <span class="nt">-monochrome</span> <span class="nt">-density</span> 600 input.pdf output.pdf
</code></pre></div></div>

<p>ถ้าติดปัญหา <code class="language-plaintext highlighter-rouge">not authorize .....</code>  หรือ <code class="language-plaintext highlighter-rouge">not allowed by security policy</code> ให้เข้าไปแก้
security policy ของ PDF ก่อน</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># หา path ของไฟล์ policy ด้วยคำสั่ง -list policy</span>
identify <span class="nt">-list</span> policy | less

<span class="c"># Output:</span>
<span class="c"># Path: /etc/ImageMagick-6/policy.xml</span>
<span class="c">#   Policy: Resource</span>
<span class="c">#     name: disk</span>
<span class="c">#     value: 1GiB</span>
<span class="c">#   Policy: Resource</span>
<span class="c">#     name: map</span>
<span class="c">#     value: 512MiB</span>
<span class="c">#   Policy: Resource</span>
<span class="c">#     name: memory</span>
<span class="c">#     value: 256MiB</span>
<span class="c">#   Policy: Resource</span>
<span class="c">#   ...</span>
</code></pre></div></div>

<p>เข้าไป comment หรือลบบรรทัดที่เป็น policy ของ PDF ออก</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;policy domain="coder" rights="none" pattern="PDF" /&gt; --&gt;</span>
</code></pre></div></div>]]></content><author><name>wittawasw</name><email>your-email@domain.com</email></author><category term="pdf," /><category term="converter," /><category term="imagemagick" /><summary type="html"><![CDATA[ใช้คำสั่ง]]></summary></entry><entry><title type="html">ลองใช้ Hotwired: Turbo Drive ในเว็บที่ไม่ใช่ Rails</title><link href="https://wittawasw.com/2024/01/08/%E0%B8%A5%E0%B8%AD%E0%B8%87%E0%B9%83%E0%B8%8A%E0%B9%89-hotwired-turbo-%E0%B9%83%E0%B8%99%E0%B9%80%E0%B8%A7%E0%B9%87%E0%B8%9A%E0%B8%97%E0%B8%B5%E0%B9%88%E0%B9%84%E0%B8%A1%E0%B9%88%E0%B9%83%E0%B8%8A%E0%B9%88-rails.html" rel="alternate" type="text/html" title="ลองใช้ Hotwired: Turbo Drive ในเว็บที่ไม่ใช่ Rails" /><published>2024-01-08T12:13:00+07:00</published><updated>2024-01-08T12:13:00+07:00</updated><id>https://wittawasw.com/2024/01/08/%E0%B8%A5%E0%B8%AD%E0%B8%87%E0%B9%83%E0%B8%8A%E0%B9%89-hotwired-turbo-%E0%B9%83%E0%B8%99%E0%B9%80%E0%B8%A7%E0%B9%87%E0%B8%9A%E0%B8%97%E0%B8%B5%E0%B9%88%E0%B9%84%E0%B8%A1%E0%B9%88%E0%B9%83%E0%B8%8A%E0%B9%88-rails</id><content type="html" xml:base="https://wittawasw.com/2024/01/08/%E0%B8%A5%E0%B8%AD%E0%B8%87%E0%B9%83%E0%B8%8A%E0%B9%89-hotwired-turbo-%E0%B9%83%E0%B8%99%E0%B9%80%E0%B8%A7%E0%B9%87%E0%B8%9A%E0%B8%97%E0%B8%B5%E0%B9%88%E0%B9%84%E0%B8%A1%E0%B9%88%E0%B9%83%E0%B8%8A%E0%B9%88-rails.html"><![CDATA[<p><img src="/images/post/hotwired.png" alt="hotwired" />
<br />
<br />
<a href="https://hotwired.dev/">Hotwired</a> คือชุด Javascript library ที่เป็นค่าเริ่มต้นของ
Ruby on Rails ตั้งแต่เวอร์ชั่นที่ 7 เป็นต้นมา แต่การที่ library ถูกเขียนด้วย Javascript ทั้งหมด
การใช้งานจึงไม่ได้ถูกผูกอยู่กับ Ruby on Rails เท่านั้น โดย
<a href="https://turbo.hotwired.dev/handbook/drive">Turbo Drive</a> เป็น feature แรกของ
Hotwired ที่เริ่มใช้งานได้ง่ายที่สุด แต่ก็สามารถเห็นผลลัพธ์ได้ทันทีและมีผลกระทบน้อย
หากเป็นเว็บไซต์ที่มีลักษณะการใช้งานเพียงเพื่อการแสดง content เท่านั้น เช่น เว็บไซต์สำนักข่าว หรือ บล็อกส่วนตัว</p>

<h2 id="การติดตั้งในหน้าเว็บเพื่อเริ่มใช้งาน">การติดตั้งในหน้าเว็บเพื่อเริ่มใช้งาน</h2>

<ul>
  <li>วาง script tag นี้ที่หน้า HTML layout ของทุกหน้า
    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"module"</span><span class="nt">&gt;</span>
  <span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">Turbo</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">https://cdn.skypack.dev/@hotwired/turbo@7.3.0</span><span class="dl">'</span><span class="p">;</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>ตัวอย่าง
    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>...<span class="nt">&lt;/title&gt;</span>
    .
    .
    .
    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"module"</span><span class="nt">&gt;</span>
      <span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">Turbo</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">https://cdn.skypack.dev/@hotwired/turbo@7.3.0</span><span class="dl">'</span><span class="p">;</span>
    <span class="nt">&lt;/script&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    .
    .
    .
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>เท่านี้ก็สามารถเริ่มใช้งาน Turbo Drive ได้เลย</li>
</ul>

<blockquote>
  <p>ตั้งค่าเวอร์ชั่นของ turbo ที่ 7.3.0 ซึ่งเป็นรุ่น stable</p>
</blockquote>

<h2 id="วิธีใช้งาน">วิธีใช้งาน</h2>
<ul>
  <li>ไม่ต้องเพิ่มคำสั่งอะไรใน source code เพราะการ import turbo ด้วย script tag ก็ทำให้ Turbo Drive เริ่มทำงานแล้ว</li>
</ul>

<blockquote>
  <p>แล้วต่างจากเดิมยังไง ในเมื่อยังไม่ได้ทำอะไรเพิ่ม ?</p>
</blockquote>

<h2 id="สิ่งที่เปลี่ยนไปหลังจากเพิ่ม-script">สิ่งที่เปลี่ยนไปหลังจากเพิ่ม script</h2>
<ul>
  <li>การ navigation ผ่าน tag <code class="language-plaintext highlighter-rouge">&lt;a&gt;</code> และ <code class="language-plaintext highlighter-rouge">&lt;form&gt;</code> ทุกอันจะถูกแทนที่ด้วย Turbo Drive</li>
  <li>การ navigate ด้วย Turbo Drive จะทำงานคล้ายกับ SPA (Single Page Application)
แต่แตกต่างตรงที่เราไม่ต้องเขียน logic เอง และ Turbo Drive จะทำการ replace HTML ภายใน
<code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> ให้โดยอัตโนมัติ โดยไม่มีการ refresh page</li>
  <li>หากทำการ inspect ที่ network tab จะเห็นความแตกต่าง ตามตัวอย่างข้างล่าง</li>
</ul>

<div style="display: flex; justify-content: space-between;margin-bottom:50px;">
  <div>
    <video width="98%" preload="auto" muted="" controls="">
      <source src="/videos/normal-navigation.mp4" type="video/mp4" />
      Your browser does not support the video tag.
    </video>
    <quote>
      navigation แบบปกติก่อนใส่ script
    </quote>
  </div>
  <div>
    <video width="98%" preload="auto" muted="" controls="">
      <source src="/videos/navigation-with-turbodrive.mp4" type="video/mp4" />
      Your browser does not support the video tag.
    </video>
    <quote>
      navigation ด้วย Turbo Drive หลังใส่ script
    </quote>
  </div>
</div>

<blockquote>
  <p>สามารถทำการ inspect network และ script tag ของเว็บนี้เพื่อดูเป็นตัวอย่างได้</p>
</blockquote>

<h2 id="เปลี่ยนสีของ-progress-bar">เปลี่ยนสีของ Progress Bar</h2>
<ul>
  <li>Turbo Drive มีแถบ Progress Bar ให้เป็นค่าตั้งต้น โดยเราสารถกำหนดสีได้เองผ่าน CSS
    <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">//</span> <span class="nt">ตัวอย่างที่ใช้งานจริงบนเว็บไซต์นี้</span>
<span class="nc">.turbo-progress-bar</span> <span class="p">{</span>
<span class="nl">background</span><span class="p">:</span> <span class="m">#79b8ff</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name>wittawasw</name><email>your-email@domain.com</email></author><category term="rails," /><category term="turbo," /><category term="hotwired," /><category term="html," /><category term="javascript" /><summary type="html"><![CDATA[Hotwired คือชุด Javascript library ที่เป็นค่าเริ่มต้นของ Ruby on Rails ตั้งแต่เวอร์ชั่นที่ 7 เป็นต้นมา แต่การที่ library ถูกเขียนด้วย Javascript ทั้งหมด การใช้งานจึงไม่ได้ถูกผูกอยู่กับ Ruby on Rails เท่านั้น โดย Turbo Drive เป็น feature แรกของ Hotwired ที่เริ่มใช้งานได้ง่ายที่สุด แต่ก็สามารถเห็นผลลัพธ์ได้ทันทีและมีผลกระทบน้อย หากเป็นเว็บไซต์ที่มีลักษณะการใช้งานเพียงเพื่อการแสดง content เท่านั้น เช่น เว็บไซต์สำนักข่าว หรือ บล็อกส่วนตัว]]></summary></entry></feed>