I"<blockquote>
  <p>source: <a href="https://github.com/wittawasw/fizzbuzz">github</a></p>
</blockquote>

<p>This is my  first time working on FizzBuzz. I’ve heard of it from other for
some time, didn’t pay much attention to it. But an acquaintance asked me
recently how would I do if I were to be interviewed and asked to do it.
So, this’s it.</p>

<p>Just like when working on any other interview processes, the code should have
quality to ship immediately if needed. I also write along some unit tests in
case I might want to try refactor it after this. Though I’m already feel that
this is already good enough for me.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">module</span> <span class="nn">FizzBuzz</span>
  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
    <span class="k">def</span> <span class="nf">out</span><span class="p">(</span><span class="ss">range: </span><span class="mi">1</span><span class="o">..</span><span class="mi">100</span><span class="p">)</span>
      <span class="n">range</span><span class="p">.</span><span class="nf">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">num</span><span class="o">|</span> <span class="n">fizzbuzz</span><span class="p">(</span><span class="n">num</span><span class="p">)</span> <span class="p">}</span>
    <span class="k">end</span>

    <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">fizzbuzz</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
      <span class="k">if</span> <span class="n">fizzbuzz?</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
        <span class="s1">'fizzbuzz'</span>
      <span class="k">elsif</span> <span class="n">fizz?</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
        <span class="s1">'fizz'</span>
      <span class="k">elsif</span> <span class="n">buzz?</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
        <span class="s1">'buzz'</span>
      <span class="k">else</span>
        <span class="n">i</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">fizzbuzz?</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
      <span class="n">fizz?</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">buzz?</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">fizz?</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
      <span class="n">i</span> <span class="o">%</span> <span class="mi">3</span> <span class="o">==</span> <span class="mi">0</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">buzz?</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
      <span class="n">i</span> <span class="o">%</span> <span class="mi">5</span> <span class="o">==</span> <span class="mi">0</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></figure>

:ET